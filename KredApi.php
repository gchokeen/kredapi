<?php 

/**
 * KredAPI
 * A PHP-based Kred client library
 *
 * @package KlredApi
 * @author Gowri sankar<gchokeen@gmail.com>, @gchokeen
 * @version 1.0
 * @license GPLv2
 */

// Define
DEFINE("HTTP_GET","GET");
DEFINE("HTTP_POST","POST");

class KredApi{
	
	private $BaseUrl = "http://api.kred.com/kredscore";

	private $KredAppId;
	
	private $KredAppkey;
	
	public function  __construct($KredAppId,$KredAppkey){
		$this->KredAppId ='Your Kred Application Id';
		$this->KredAppkey ='Your Kred Application Key';
	}
	
	
	function KredScore($term,$source){
		$url = $BaseUrl;
		$params['term'] = $term; //screen name
		$parm['source'] = $source; // eg:- Twitter, Facebook etc		
		$parm['app_id'] = $this->KredAppId;
		$parm['app_key'] = $this->KredAppkey;
		// Return the result;
		$CurlResult = $this->GET($url,$params);
		$result =  json_decode($CurlResult);
		
		return $result;
	}

	/******************************************************/
	//       Utility
	/******************************************************/
	
	/**
	 * Request
	 * Performs a cUrl request with a url generated by MakeUrl.
	 * @param String $url The base url to query
	 * @param Array $params The parameters to pass to the request
	 */
	private function Request($url,$params=false,$type=HTTP_GET){
	
		// Populate data for the GET request
		if($type == HTTP_GET) $url = $this->MakeUrl($url,$params);
	
		// borrowed from Andy Langton: http://andylangton.co.uk/
		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL,$url);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
		if ( isset($_SERVER['HTTP_USER_AGENT']) ) {
			curl_setopt($ch, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT'] );
		}else {
			// Handle the useragent like we are Google Chrome
			curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.X.Y.Z Safari/525.13.');
		}
		curl_setopt($ch , CURLOPT_TIMEOUT, 30);
		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
	
		// Populate the data for POST
		if($type == HTTP_POST){
			curl_setopt($ch, CURLOPT_POST, 1);
			if($params) curl_setopt($ch, CURLOPT_POSTFIELDS, $params);
		}
	
		$result=curl_exec($ch);
		$info=curl_getinfo($ch);
		curl_close($ch);
	
		return $result;
	}
	
	/**
	 * GET
	 * Abstraction of the GET request
	 */
	private function GET($url,$params=false){
		return $this->Request($url,$params,HTTP_GET);
	}
	
	/**
	 * POST
	 * Abstraction of a POST request
	 */
	private function POST($url,$params=false){
		return $this->Request($url,$params,HTTP_POST);
	}
	
	/**
	 * MakeUrl
	 * Takes a base url and an array of parameters and sanitizes the data, then creates a complete
	 * url with each parameter as a GET parameter in the URL (Credit to Stephen Young)
	 * @param String $url The base URL to append the query string to (without any query data)
	 * @param Array $params The parameters to pass to the URL
	 */
	private function MakeUrl($url,$params){
		if(!empty($params) && $params){
			foreach($params as $k=>$v) $kv[] = "$k=$v";
			$url_params = str_replace(" ","+",implode('&',$kv));
			$url = trim($url) . '?' . $url_params;
		}
		return $url;
	}	
}